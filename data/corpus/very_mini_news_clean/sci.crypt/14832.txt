path from marc newsgroups subject frequently noted vulnerabilities date mar gmt expires thu may gmt sender news usenet news system organization computer science indiana university lines approved attacks originator mar some possible attacks on this is a living list of potential weaknesses to keep your eyes open for when using for secure electronic mail it does not go into great detail and is almost certainly not exhaustive obviously many of the weaknesses are weaknesses of secured mail in general and will to secure mail programs other than it is maintained by marc it is posted monthly to a variety of news groups pertaining specifically to should go to attacks breaking rsa would allow an attacker to find out your private key in which case he could read any mail encrypted to you and sign messages with your private key rsa is generally believed to be resistant to all standard techniques even a standard key about bits with is long enough to render this a huge investment in hardware or a breakthrough in factoring breaking des would allow an attacker to read any given message since the message itself is encrypted with des it would not allow an attacker to claim to be you des has only bits in its key and thus could be compromised by force with sufficient hardware but few agencies have such money to to simply read one message since each message has a different des key the work for each message would remain high key management attacks stealing your private key would allow the same benefits as breaking rsa to safeguard it it is encrypted with a des key which is derived from a you type in however if an attacker can get a copy of your private and your by network packets tapping lines or whatever he could break the whole scheme the main risk is that of transferring either the or the private key file across an link so do do that run on a trusted machine preferably one sitting right in front of you ideally your own machine in your own home or maybe office which nobody else has physical access to you into accepting a bogus public key for someone else could allow an opponent to you into sending secret messages to him rather than to the real recipient if the enemy can fool your intended recipient as well he could the messages with the other bogus public key and pass them along it is important to get the proper public keys of other people the most common mechanism for this is finger assuming the opponent has not compromised routers or or such finger can be given a fair amount of trust the strongest method of key authentication is to exchange keys in person however this is not always practical having other people for you by signing a statement containing your key is possible although does have features for doing this as automatically as pgp does generate and check of public keys in the key files they may be exchanged via a separate channel for authentication playback attacks even if an opponent can not break the cryptography an opponent could still cause difficulties for example suppose you send a message with a mode which does not provide disclosure protection to alice which says ok let do that your opponent it and now it to bob who now has a message which is authenticated as from you telling him to do that of course he may interpret it in an entirely different context or your opponent could transmit the same message to the same recipient much later it would be seen differently at a later time or the opponent could change the to himself register your public key as his and send a message hoping the recipient will send him return mail indicating perhaps even quoting the unknown message to defeat playback attacks the of each message should include some indication of the sender and recipient and a unique identifier typically the date a good script for should do this automatically as a recipient you should be sure that the header and the sender indicated within the are the same that you really are a recipient and that the message is not an old one some this also can and should be automated the author of this faq has made a modest attempt at the process of generating and checking headers the programs are included in the standard distribution in the utils directory local attacks clearly the security of can not be greater than the security of the machine where the encryption is performed for example under unix a could manage to get at your encrypted mail although it would take some planning and effort to do something like replace the executable with a trojan horse or to get a copy of the depending how it stored in addition the link between you and the machine running is an extension of that if you with on a remote machine which you are connected to via network or worse yet modem an could see the and probably also your should only be executed on systems you trust obviously in the extreme case should only be used on your own machine which you have total control over and which nobody else has access to which has only carefully examined software known to be free of viruses and so on however there a very real between convenience and security here a more moderately cautious user might use on a unix workstation where other people have access even root access but increase security by keeping private keys and the linked of course executable on a floppy disk some people will keep on a system but when dialing in over an line they will download the message to their own system and perform the there however the security provided by such a mechanism is somewhat since you presumably type your password to log in you just given away the store since the attacker can now log in as you and install traps in your account to steal your private key next time you use it from a less line this will likely remain the situation as long as most systems use the rather mechanism of password authentication i find it nice to put a brief statement of how carefully i manage my security arrangement in my next to my public key so that potential can be aware what level of precautions are in place some people use two keys a short one which is not carefully managed for ordinary use and a longer one which is treated with greater care for critical correspondence partner attacks encryption will ensure that only a person with the private key corresponding to the public key used to the data may read the traffic however once someone with that key gets the message she may always make whatever kind of transformations she wishes there exist no barriers to a recipient say taking an encrypted message and converting it to a message signed by you and readable by anyone although does not provide this functionality indeed the latest draft i have seen specifically states that such transformations should be possible to allow forwarding functions to work including the recipients in the as mentioned above will make it possible for recipients of a redistributed message to be aware of its original nature naturally the security of the cryptography can never be greater than the security of the people using it 